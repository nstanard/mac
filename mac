#!/bin/bash

a_flag='' # Homebrew
b_flag='' # Ruby

print_usage() {
  printf "Usage: ..."
}

while getopts 'abf:v' flag; do
  case "${flag}" in
    a) a_flag='true' ;;
    b) b_flag='true' ;;
    *) print_usage
       exit 1 ;;
  esac
done

# https://stackoverflow.com/questions/12815774/importing-functions-from-a-shell-script
. ./functions.sh --source-only

export RED='\033[0;31m'
export NC='\033[0m' # No Color

export devrc="$HOME/.devrc";
touch $devrc;

export DEV_FOLDER="$HOME/Development";
mkdir -p $DEV_FOLDER;

export UTILS_FOLDER="$DEV_FOLDER/_utils";
mkdir -p $UTILS_FOLDER;

export SCRIPTS="$UTILS_FOLDER/scripts";
mkdir -p $SCRIPTS;

export MAC_SETUP_FOLDER="$DEV_FOLDER/mac";
mkdir -p $MAC_SETUP_FOLDER;

export LAST_RUN_FILE="$MAC_SETUP_FOLDER/.last"

# Copy scripts over 
cp ./scripts/pathmunge.sh $SCRIPTS
cp ./scripts/filelimit.sh $SCRIPTS

export shell_file=$(get_shell_file);

# NOTE: 
# By default, a normal user does not have /usr/local/sbin on their path.
# /usr/local/bin is for programs that a normal user may run. 
pathmunge "/usr/local/sbin";
# /usr/local/sbin is for system administration programs (which are not part of the core OS) that a local administrator may run. 
pathmunge "/usr/local/bin/node";

bash "$MAC_SETUP_FOLDER/scripts/shell.sh";

if [[ "$a_flag" == "true" ]]; then
    bash "$MAC_SETUP_FOLDER/scripts/homebrew.sh";
fi

if [[ "$b_flag" == "true" ]]; then
    bash "$MAC_SETUP_FOLDER/scripts/ruby.sh";
fi

bash "$MAC_SETUP_FOLDER/scripts/devrc.sh";

# Append the devrc to the main shell file to be sourced on shell start
append_to_file $shell_file "source $HOME/.devrc"

# https://rubjo.github.io/victor-mono/
brew tap homebrew/cask-fonts

# https://github.com/powerline/fonts
# Doesn't work on zshell?
# sudo apt-get install fonts-powerline
# https://github.com/powerline/fonts/tree/master/SourceCodePro - give this a try when you have time

# Write out OS last run data
# 1.
# cat > $LAST_RUN_FILE <<-EOF
# $(sw_vers)
# EOF
# 2. 
echo $(sw_vers) > $LAST_RUN_FILE;
